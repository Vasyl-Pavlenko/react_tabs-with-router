{"version":3,"sources":["components/Navigation/Navigation.tsx","components/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","to","isActive","classNames","tabs","id","title","content","TabsPage","tabId","useParams","useState","selectedTab","setSelectedTab","useEffect","map","element","state","text","undefined","some","tab","find","App","path","index","ReactDOM","render","document","getElementById"],"mappings":"uPAIaA,EAAuB,kBAClC,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,kBASA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,0B,OCfFE,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAAO,IAAD,EAC9BC,EAAUC,cAAVD,MACR,EAAsCE,mBAA6BF,GAAnE,mBAAOG,EAAP,KAAoBC,EAApB,KAMA,OAJAC,qBAAU,WACRD,EAAeJ,KACd,CAACA,IAGF,qCACE,oBAAIT,UAAU,QAAd,uBAIA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKW,KAAI,SAACC,GAAD,OACR,oBACE,UAAQ,MACRhB,UAAWG,IAAW,GAAI,CACxB,YAAaS,IAAgBI,EAAQX,KAHzC,SAOE,cAAC,IAAD,CACEJ,GAAE,gBAAWe,EAAQX,IACrBY,MAAO,CAAEC,KAAMF,EAAQT,SAFzB,SAIGS,EAAQV,SANNU,EAAQX,WAYrB,qBACEL,UAAU,QACV,UAAQ,aAFV,cAImBmB,IAAhBP,GAA6BR,EAAKgB,MAAK,SAAAC,GAAG,OAAIA,EAAIhB,KAAOO,KAAzD,UACGR,EAAKkB,MAAK,SAAAD,GAAG,OAAIA,EAAIhB,KAAOO,YAD/B,aACG,EAA0CL,QAC1C,4BC3CCgB,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKvB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwB,KAAK,IACLR,QAAS,oBAAIhB,UAAU,QAAd,8BAGX,cAAC,IAAD,CACEwB,KAAK,OACLR,QAAS,cAAC,IAAD,CAAUf,GAAG,QAGxB,cAAC,IAAD,CACEuB,KAAK,IACLR,QAAS,oBAAIhB,UAAU,QAAd,yBAGX,eAAC,IAAD,CAAOwB,KAAK,QAAZ,UACE,cAAC,IAAD,CACEC,OAAK,EACLT,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CACEQ,KAAK,SACLR,QAAS,cAAC,EAAD,oBClCvBU,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ab2fbf83.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/tabs\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId } = useParams<{ tabId?: string }>();\n  const [selectedTab, setSelectedTab] = useState<string | undefined>(tabId);\n\n  useEffect(() => {\n    setSelectedTab(tabId);\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        Tabs page\n      </h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((element: Tab) => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames('', {\n                'is-active': selectedTab === element.id,\n              })}\n              key={element.id}\n            >\n              <Link\n                to={`/tabs/${element.id}`}\n                state={{ text: element.content }}\n              >\n                {element.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {selectedTab !== undefined && tabs.some(tab => tab.id === selectedTab)\n          ? tabs.find(tab => tab.id === selectedTab)?.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { TabsPage } from './components/TabsPage';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" />}\n          />\n\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home page</h1>}\n          />\n\n          <Route path=\"/tabs\">\n            <Route\n              index\n              element={<TabsPage />}\n            />\n\n            <Route\n              path=\":tabId\"\n              element={<TabsPage />}\n            />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}